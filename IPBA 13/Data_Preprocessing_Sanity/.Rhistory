:
library(dplyr)
library(ggplot2)
library(summarytools)
##### Import & Clean
setwd("D:\\GitHub\\R_Basics\\IPBA 13\\Regression")
#Data Import
data <- read.csv("predict_CarPrice_simple.csv", na.strings=c("NA","NaN", " "))
# Empty String
data <- data %>% mutate(across(where(is.character), ~ na_if(.,"")))
##### Identify Missing Values
colSums(is.na(data)) / nrow(data)
# rounding to 2 decimal places
corr_mat <- round(cor(data),2)
head(corr_mat)
# rounding to 2 decimal places
corr_mat <- round(cor(data[,2:]),2)
# rounding to 2 decimal places
corr_mat <- round(cor(data[,2:ncol(data)]),2)
head(corr_mat)
# Exclude ID Column
data[,2:ncol(data)
]
# Exclude ID Column
data[,2:ncol(data)].head()
# Exclude ID Column
head(data[,2:ncol(data)])
# Exclude ID Column
head(data)
data_corr <- data[,2:ncol(data)]
# rounding to 2 decimal places
corr_mat <- round(cor(data_corr),2)
head(corr_mat)
# The mtcars dataset:
data_corr_matrix <- as.matrix(data_corr)
# Default Heatmap
heatmap(data_corr_matrix)
# Default Heatmap
heatmap(data_corr_matrix,scale="column")
install.packages("DataExplorer")
plot_correlation(data_corr)
library(DataExplorer)
plot_correlation(data_corr)
plot_correlation(data)
plot_intro(data_corr)
plot_bar(data_corr)
library(DataExplorer)
library(dplyr)
library(DataExplorer)
## EDA
plot_intro(data)
#Data Import
data <- read.csv("JobChange_train.csv")
# Empty String
data <- data %>% mutate(across(where(is.character), ~ na_if(.,"")))
## EDA
plot_intro(data)
#Data Import
data <- read.csv("JobChange_train.csv")
##### Import & Clean
setwd("D:\\GitHub\\R_Basics\\IPBA 13\\Data_Preprocessing_Sanity")
#Data Import
data <- read.csv("JobChange_train.csv")
# Empty String
data <- data %>% mutate(across(where(is.character), ~ na_if(.,"")))
##### Check Summary (summarytools)
dfSummary(data)
##### Identify Missing Values
colSums(is.na(data)) / nrow(data)
## EDA
plot_intro(data)
plot_missing(data)
##### Check Summary for Pre-processing (DataExplorer)
plot_intro(data)
##### Identify Missing Values
## Old Way
colSums(is.na(data)) / nrow(data)
## Better Way
plot_missing(data)
##### Check Summary for Pre-processing (DataExplorer)
plot_intro(data)
##### Identify Missing Value Columns
## Old Way
colSums(is.na(data)) / nrow(data)
## Better Way
plot_missing(data)
plot_correlation(data)
plot_correlation(data, type = numerical)
plot_correlation(data, type = "continuous")
#Data Import
data <- read.csv("JobChange_train.csv")
# Empty String
data <- data %>% mutate(across(where(is.character), ~ na_if(.,"")))
##### Check Summary for Pre-processing (DataExplorer)
### Look For Numeric, Categorical Features & Missing Values %
plot_intro(data)
### Identify Missing Value Columns
### Old Way
colSums(is.na(data)) / nrow(data)
### Better Way
plot_missing(data)
### Better Way
plot_missing(data)
## Treat Missing Values
## Numerical
# Get all Numerical Column Names
plot_correlation(data, type = "continuous")
# Get all Numerical Column Names
plot_bar(data)
# Get all Categorical Column Names
plot_str(data)
# Get all Categorical Column Names
plot_bar(data)
# Treat gender
data$gender <- ifelse(is.na(data$gender), ave(data$gender, FUN = function(x) mode(x, na.rm = TRUE )), data$gender)
# Treat gender
data$gender <- ifelse(is.na(data$gender), ave(data$gender, FUN = function(x) mode(x, na.rm = TRUE )), data$gender)
# Treat city_development_index
data$city_development_index <- ifelse(is.na(data$city_development_index), ave(data$city_development_index, FUN = function(x) mean(x, na.rm = TRUE )), data$city_development_index)
# Treat training_hours
data$training_hours <- ifelse(is.na(data$training_hours), ave(data$training_hours, FUN = function(x) mean(x, na.rm = TRUE )), data$training_hours)
# Treat gender
data$gender <- ifelse(is.na(data$gender), ave(data$gender, FUN = function(x) mode(x )), data$gender)
# Get all Categorical Column Names
plot_bar(data)
# Treat gender
data$gender <- ifelse(is.na(data$gender), mode(data$gender, FUN = function(x) mode(x )), data$gender)
# Get all Categorical Column Names
plot_bar(data)
#Data Import
data <- read.csv("JobChange_train.csv")
# Empty String
data <- data %>% mutate(across(where(is.character), ~ na_if(.,"")))
##### Check Summary for Pre-processing (DataExplorer)
### Look For Numeric, Categorical Features & Missing Values %
plot_intro(data)
### Identify Missing Value Columns
### Old Way
colSums(is.na(data)) / nrow(data)
### Better Way
plot_missing(data)
# Get all Numerical Column Names
plot_correlation(data, type = "continuous")
# Treat city_development_index
data$city_development_index <- ifelse(is.na(data$city_development_index), ave(data$city_development_index, FUN = function(x) mean(x, na.rm = TRUE )), data$city_development_index)
# Treat training_hours
data$training_hours <- ifelse(is.na(data$training_hours), ave(data$training_hours, FUN = function(x) mean(x, na.rm = TRUE )), data$training_hours)
# Get all Categorical Column Names
plot_bar(data)
# Treat gender
data$gender <- ifelse(is.na(data$gender), "missing"), data$gender)
# Treat gender
data$gender <- ifelse(is.na(data$gender), "missing")), data$gender)
# Treat gender
data$gender <- ifelse(is.na(data$gender), "missing", data$gender)
# Get all Categorical Column Names
plot_bar(data)
## Transformation - Numerical
scale(data)
## Transformation - Numerical
scale(data, x = c(city_development_index,training_hours))
## Transformation - Numerical
scale(data, x = c(data$city_development_index,data$training_hours))
## Transformation - Numerical
scale(data$city_development_index, center = TRUE, scale = TRUE)
## Outlier - Numerical
x <- data$training_hours
qnt <- quantile(x, probs=c(.25, .75), na.rm = T)
caps <- quantile(x, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(x, na.rm = T)
## Outlier - Numerical
boxplot(data$training_hours)
x[x < (qnt[1] - H)] <- caps[1]
x[x > (qnt[2] + H)] <- caps[2]
#Commit Change
data$training_hours <- x
# Check again
boxplot(data$training_hours)
x[x <= (qnt[1] - H)] <- caps[1]
x[x >= (qnt[2] + H)] <- caps[2]
#Commit Change
data$training_hours <- x
# Check again
boxplot(data$training_hours)
##### Convert String to Numerical
data <- data %>% mutate(experience = IF_ELSE(experience == ">20", 20, experience))
library(dplyr)
library(ggplot2)
library(DataExplorer)
library(summarytools)
##### Convert String to Numerical
data <- data %>% mutate(experience = if_else(experience == ">20", 20, experience))
##### Convert String to Numerical
data <- data %>% mutate(experience = if_else(experience == ">20", 20, experience))
##### Convert String to Numerical
data <- data %>% mutate(experience = ifelse(experience == ">20", 20, experience))
data$experience
data <- data %>% mutate(experience = ifelse(experience == "<1", 0, experience))
data$experience
# last_new_job
data <- data %>% mutate(last_new_job = ifelse(last_new_job == ">4", 4, last_new_job))
data <- data %>% mutate(last_new_job = ifelse(last_new_job == "never", 0, last_new_job))
data$last_new_job
data$experience <- as.numeric(data$experience)
data$experience
data$last_new_job <- as.numeric(data$last_new_job)
data$last_new_job
#Data Import
data <- read.csv("JobChange_train.csv")
# Empty String
data <- data %>% mutate(across(where(is.character), ~ na_if(.,"")))
##### Convert String to Numerical
# experience
data <- data %>% mutate(experience = ifelse(experience == ">20", 20, experience))
data <- data %>% mutate(experience = ifelse(experience == "<1", 0, experience))
data$experience <- as.numeric(data$experience)
data$experience
##### Check Summary for Pre-processing (DataExplorer)
### Look For Numeric, Categorical Features & Missing Values %
plot_intro(data)
### Identify Missing Value Columns
### Old Way
colSums(is.na(data)) / nrow(data)
### Better Way
plot_missing(data)
# Get all Numerical Column Names
plot_correlation(data, type = "continuous")
# Treat city_development_index
data$city_development_index <- ifelse(is.na(data$city_development_index), ave(data$city_development_index, FUN = function(x) mean(x, na.rm = TRUE )), data$city_development_index)
# Treat training_hours
data$training_hours <- ifelse(is.na(data$training_hours), ave(data$training_hours, FUN = function(x) mean(x, na.rm = TRUE )), data$training_hours)
# Treat experience
data$experience <- ifelse(is.na(data$experience), ave(data$experience, FUN = function(x) mean(x, na.rm = TRUE )), data$experience)
# Get all Categorical Column Names
plot_bar(data)
# Treat gender
data$gender <- ifelse(is.na(data$gender), "missing", data$gender)
# Treat enrolled_university
data$enrolled_university <- ifelse(is.na(data$enrolled_university), "missing", data$enrolled_university)
# Treat education_level
data$education_level <- ifelse(is.na(data$education_level), "missing", data$education_level)
# Treat major_discipline
data$major_discipline <- ifelse(is.na(data$major_discipline), "missing", data$major_discipline)
# Treat company_size
data$company_size <- ifelse(is.na(data$company_size), "missing", data$company_size)
# Treat company_type
data$company_type <- ifelse(is.na(data$company_type), "missing", data$company_type)
# Treat last_new_job
data$last_new_job <- ifelse(is.na(data$last_new_job), "missing", data$last_new_job)
# Transformation city_development_index
data$city_development_index <- scale(data$city_development_index, center = TRUE, scale = TRUE)
# Transformation training_hours
data$training_hours <- scale(data$training_hours, center = TRUE, scale = TRUE)
# Transformation experience
data$experience <- scale(data$experience, center = TRUE, scale = TRUE)
## Outlier - Numerical
boxplot(data$training_hours)
x <- data$training_hours
qnt <- quantile(x, probs=c(.25, .75), na.rm = T)
caps <- quantile(x, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(x, na.rm = T)
x[x <= (qnt[1] - H)] <- caps[1]
x[x >= (qnt[2] + H)] <- caps[2]
#Commit Change
data$training_hours <- x
# Check again
boxplot(data$training_hours)
# Check Again
plot_missing(data)
## Transformation - Numerical
boxplot(data)
## Transformation - Numerical
boxplot(c(data$city_development_index,data$training_hours,data$experience))
## Transformation - Numerical
data_box_plot <- data[,c("city_development_index","training_hours","experience")]
plot_bar(data)
barplot(data_box_plot)
## Transformation - Numerical
data_box_plot <- data[,c("city_development_index","training_hours","experience")]
barplot(data_box_plot)
## Transformation - Numerical
data_box_plot <- select(data, c("city_development_index","training_hours","experience"))
barplot(data_box_plot)
data_box_plot
#Data Import
data <- read.csv("JobChange_train.csv")
# Empty String
data <- data %>% mutate(across(where(is.character), ~ na_if(.,"")))
##### Convert String to Numerical
# experience
data <- data %>% mutate(experience = ifelse(experience == ">20", 20, experience))
data <- data %>% mutate(experience = ifelse(experience == "<1", 0, experience))
# Convert to Numeric
data$experience <- as.numeric(data$experience)
data$experience
##### Check Summary for Pre-processing (DataExplorer)
### Look For Numeric, Categorical Features & Missing Values %
plot_intro(data)
### Identify Missing Value Columns
### Old Way
colSums(is.na(data)) / nrow(data)
### Better Way
plot_missing(data)
# Get all Numerical Column Names
plot_correlation(data, type = "continuous")
# Treat city_development_index
data$city_development_index <- ifelse(is.na(data$city_development_index), ave(data$city_development_index, FUN = function(x) mean(x, na.rm = TRUE )), data$city_development_index)
# Treat training_hours
data$training_hours <- ifelse(is.na(data$training_hours), ave(data$training_hours, FUN = function(x) mean(x, na.rm = TRUE )), data$training_hours)
# Treat experience
data$experience <- ifelse(is.na(data$experience), ave(data$experience, FUN = function(x) mean(x, na.rm = TRUE )), data$experience)
# Treat gender
data$gender <- ifelse(is.na(data$gender), "missing", data$gender)
# Treat enrolled_university
data$enrolled_university <- ifelse(is.na(data$enrolled_university), "missing", data$enrolled_university)
# Treat education_level
data$education_level <- ifelse(is.na(data$education_level), "missing", data$education_level)
# Treat major_discipline
data$major_discipline <- ifelse(is.na(data$major_discipline), "missing", data$major_discipline)
# Treat company_size
data$company_size <- ifelse(is.na(data$company_size), "missing", data$company_size)
# Treat company_type
data$company_type <- ifelse(is.na(data$company_type), "missing", data$company_type)
# Treat last_new_job
data$last_new_job <- ifelse(is.na(data$last_new_job), "missing", data$last_new_job)
## Transformation - Numerical
data_box_plot <- select(data, c("city_development_index","training_hours","experience"))
barplot(data_box_plot)
data_long <- melt(data_box_plot)
library(reshape2)
## Transformation - Numerical
data_box_plot <- select(data, c("city_development_index","training_hours","experience"))
data_long <- melt(data_box_plot)
data_long
barplot(data_long)
# Applying ggplot
ggplot(data_long, aes(x = variable, y = value)) + geom_boxplot()
library(dplyr)
library(ggplot2)
library(DataExplorer)
library(summarytools)
##### Import & Clean
setwd("D:\\GitHub\\R_Basics\\IPBA 13\\Regression")
#Data Import
data <- read.csv("predict_CarPrice_simple.csv", na.strings=c("NA","NaN", " "))
# Empty String
data <- data %>% mutate(across(where(is.character), ~ na_if(.,"")))
##### Identify Missing Values
colSums(is.na(data)) / nrow(data)
# Exclude ID Column
head(data)
head(data[,2:ncol(data)])
data_corr <- data[,2:ncol(data)]
# rounding to 2 decimal places
corr_mat <- round(cor(data_corr),2)
head(corr_mat)
# Default Heatmap
heatmap(data_corr_matrix)
# The mtcars dataset:
data_corr_matrix <- as.matrix(data_corr)
# Default Heatmap
heatmap(data_corr_matrix)
# With Proper Scale
heatmap(data_corr_matrix,scale="column")
plot_correlation(data_corr)
# Plot Correlation between Independant Variables
plot_correlation(data_corr)
# Check Data
plot_intro(data_corr)
library(caret)
##### Select Top Features
correlationMatrix <- cor(data_corr)
#Data Import
data <- read.csv("predict_CarPrice_simple.csv", na.strings=c("NA","NaN", " "))
# Exclude ID Column from Dataset
head(data)
head(data[,2:ncol(data)])
data_corr <- data[,2:ncol(data)]
# Check Data
plot_intro(data_corr)
# Plot Correlation between Independent Variables
plot_correlation(data_corr)
library(dplyr)
library(ggplot2)
library(DataExplorer)
library(summarytools)
library(caret)
library(caret)
library(lattice)
library(lattice)
library(caret)
library(caret)
##### Select Top Features
correlationMatrix <- cor(data_corr)
# find attributes that are highly corrected (ideally >0.75)
highlyCorrelated <- findCorrelation(correlationMatrix, cutoff=0.5)
library(dplyr)
library(ggplot2)
library(DataExplorer)
library(summarytools)
library(reshape2)
##### Import & Clean
setwd("D:\\GitHub\\R_Basics\\IPBA 13\\Data_Preprocessing_Sanity")
#Data Import
data <- read.csv("JobChange_train.csv")
library(dplyr)
library(ggplot2)
library(DataExplorer)
library(summarytools)
library(reshape2)
##### Import & Clean
setwd("D:\\GitHub\\R_Basics\\IPBA 13\\Data_Preprocessing_Sanity")
#Data Import
data <- read.csv("JobChange_train.csv")
# Empty String
data <- data %>% mutate(across(where(is.character), ~ na_if(.,"")))
##### Convert String to Numerical
# experience
data <- data %>% mutate(experience = ifelse(experience == ">20", 20, experience))
data <- data %>% mutate(experience = ifelse(experience == "<1", 0, experience))
# Convert to Numeric
data$experience <- as.numeric(data$experience)
data$experience
### Identify Missing Value Columns
### Old Way
colSums(is.na(data)) / nrow(data)
### Better Way
plot_missing(data)
##### Check Summary for Pre-processing (DataExplorer)
### Look For Numeric, Categorical Features & Missing Values %
plot_intro(data)
### Better Way
plot_missing(data)
# Treat city_development_index
data$city_development_index <- ifelse(is.na(data$city_development_index)
, ave(data$city_development_index
, FUN = function(x) mean(x, na.rm = TRUE ))
, data$city_development_index)
# Treat training_hours
data$training_hours <- ifelse(is.na(data$training_hours)
, ave(data$training_hours
, FUN = function(x) mean(x, na.rm = TRUE ))
, data$training_hours)
plot_missing(data)
# Treat experience
data$experience <- ifelse(is.na(data$experience)
, ave(data$experience
, FUN = function(x) mean(x, na.rm = TRUE ))
, data$experience)
plot_missing(data)
# Get all Categorical Column Names
plot_bar(data)
# Treat gender
data$gender <- ifelse(is.na(data$gender), "missing", data$gender)
# Treat enrolled_university
data$enrolled_university <- ifelse(is.na(data$enrolled_university), "missing", data$enrolled_university)
# Treat education_level
data$education_level <- ifelse(is.na(data$education_level), "missing", data$education_level)
# Treat major_discipline
data$major_discipline <- ifelse(is.na(data$major_discipline), "missing", data$major_discipline)
# Treat company_size
data$company_size <- ifelse(is.na(data$company_size), "missing", data$company_size)
# Treat company_type
data$company_type <- ifelse(is.na(data$company_type), "missing", data$company_type)
# Treat last_new_job
data$last_new_job <- ifelse(is.na(data$last_new_job), "missing", data$last_new_job)
plot_missing(data)
## Transformation - Numerical
# WHY
data_box_plot <- select(data, c("city_development_index","training_hours","experience"))
data_long <- melt(data_box_plot)
data_long
View(data_long)
View(data_long)
# Applying ggplot
ggplot(data_long, aes(x = variable, y = value)) + geom_boxplot()
# Transformation city_development_index
data$city_development_index <- scale(data$city_development_index, center = TRUE, scale = TRUE)
# Transformation city_development_index
data$city_development_index <- scale(data$city_development_index, center = TRUE, scale = TRUE)
# Transformation training_hours
data$training_hours <- scale(data$training_hours, center = TRUE, scale = TRUE)
# Transformation experience
data$experience <- scale(data$experience, center = TRUE, scale = TRUE)
## Transformation - Numerical
# WHY
data_box_plot <- select(data, c("city_development_index","training_hours","experience"))
data_long <- melt(data_box_plot)
# Applying ggplot
ggplot(data_long, aes(x = variable, y = value)) + geom_boxplot()
## Outlier - Numerical
boxplot(data$training_hours)
x <- data$training_hours
qnt <- quantile(x, probs=c(.25, .75), na.rm = T)
qnt
x <- data$training_hours
qnt <- quantile(x, probs=c(.25, .75), na.rm = T)
caps <- quantile(x, probs=c(.05, .95), na.rm = T)
caps
H <- 1.5 * IQR(x, na.rm = T)
x[x <= (qnt[1] - H)] <- caps[1]
x[x >= (qnt[2] + H)] <- caps[2]
#Commit Change
data$training_hours <- x
# Check again
boxplot(data$training_hours)
##### Final Check for Missing Values
plot_missing(data)
plot_intro(data)
qnt
caps
qnt
